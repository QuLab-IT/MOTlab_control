# -*- coding: utf-8 -*-
"""
Created on Wed Feb 26 10:46:12 2020

@author: MOT_User
"""

import os
import matplotlib.pyplot as plt
from PIL import Image ###usefull to convert np.array in images when saving them
import numpy as np
from scipy import ndimage, optimize
import cv2
import copy
import gc
from AnalysysBMP_Exp import Gauss, FlatTopGauss, SaturatedExp, std_dev, SubtractImgs, LogImg, DivideImgs, PanShotAbsorption, PanShotAbsorptionReduced, Image_Matrix

'''
Takes pictures generated by Pump_duration and plots the optical density as a function of pump duration with and without rod.
Error bar refers to the confidence interval of an average over pixels.
'''

pic_num = 22


### with ROD
dirName = 'WithRod'  
folder_path = r'C:\Users\MOT_USER\Documents\Python Scripts\QuantumLabPython\ExperimentMOT_special_2\Output\Pump_duration' + '\\' + dirName   

row_lims  = [121,124]
col_lims  = [85,88]
Pix_num = (row_lims[1] - row_lims[0])*(col_lims[1] - col_lims[0])
            
Bkg_probe_mx = Image_Matrix(ImageName = 'Cam0_0_1.bmp', folder_path = folder_path + '\\' + 'Background')   
Bkg_probe_dark_mx = Image_Matrix(ImageName = 'Cam0_0_0.bmp', folder_path = folder_path + '\\' + 'Background')   
Probe_imgs = [(Image_Matrix(ImageName = 'Cam0_%d_0_0.bmp' %i, folder_path = folder_path).image) for i in range(pic_num)]

Probe_opt_imgs = [LogImg(DivideImgs(SubtractImgs(Bkg_probe_mx.image, Bkg_probe_dark_mx.image), \
                                    SubtractImgs(Probe_imgs[i],Bkg_probe_dark_mx.image))) for i in range(pic_num)]
Px_list = [[Probe_opt_imgs[i][m,n] for m in range(*row_lims) for n in range(*col_lims)] for i in range(pic_num)]
Px_mean_ROD_list = [np.mean(Px_list[i]) for i in range(pic_num)]
Px_std_ROD_list = [std_dev(Px_list[i]) for i in range(pic_num)]
Px_std_avg_ROD_list = [std_dev(Px_list[i])/np.sqrt(Pix_num) for i in range(pic_num)]


### without ROD
dirName = 'WithoutRod'  
folder_path = r'C:\Users\MOT_USER\Documents\Python Scripts\QuantumLabPython\ExperimentMOT_special_2\Output\Pump_duration' + '\\' + dirName   

row_lims  = [121,124]
col_lims  = [85,88]
Pix_num = (row_lims[1] - row_lims[0])*(col_lims[1] - col_lims[0])
            
Bkg_probe_mx = Image_Matrix(ImageName = 'Cam0_0_1.bmp', folder_path = folder_path + '\\' + 'Background')   
Bkg_probe_dark_mx = Image_Matrix(ImageName = 'Cam0_0_0.bmp', folder_path = folder_path + '\\' + 'Background')   
Probe_imgs = [(Image_Matrix(ImageName = 'Cam0_%d_0_0.bmp' %i, folder_path = folder_path).image) for i in range(pic_num)]

Probe_opt_imgs = [LogImg(DivideImgs(SubtractImgs(Bkg_probe_mx.image, Bkg_probe_dark_mx.image), \
                                    SubtractImgs(Probe_imgs[i],Bkg_probe_dark_mx.image))) for i in range(pic_num)]
Px_list = [[Probe_opt_imgs[i][m,n] for m in range(*row_lims) for n in range(*col_lims)] for i in range(pic_num)]
Px_mean_NOROD_list = [np.mean(Px_list[i]) for i in range(pic_num)]
Px_std_NOROD_list = [std_dev(Px_list[i]) for i in range(pic_num)]
Px_std_avg_NOROD_list = [std_dev(Px_list[i])/np.sqrt(Pix_num) for i in range(pic_num)]


### PLOT
base = np.array([(i*5) for i in range(pic_num)])
fig = plt.figure()
plt.title('Pixel Averaged Optical Density')
plt.xlabel('Pump duration [us]')
plt.errorbar(base, Px_mean_ROD_list, fmt = 'bo', yerr=Px_std_avg_ROD_list, xerr=None)
plt.yscale('log')
plt.errorbar(base, Px_mean_NOROD_list, fmt = 'ro', yerr=Px_std_avg_NOROD_list, xerr=None)
plt.grid()
plt.legend(('with rod', 'no rod'))

### FIT
popt, pcov = optimize.curve_fit(SaturatedExp, base, np.array(Px_mean_ROD_list), method = 'trf')
print('Fit Parameters:', popt) ### [a,x0,sigma]
fit_array = SaturatedExp(base, *popt)
plt.plot(base, fit_array, 'b-')

popt, pcov = optimize.curve_fit(SaturatedExp, base, np.array(Px_mean_NOROD_list), method = 'trf')
print('Fit Parameters:', popt) ### [a,x0,sigma]
fit_array = SaturatedExp(base, *popt)
plt.plot(base, fit_array, 'r-')

### SAVE FIGURE
plt.show(block = False)
plt.savefig(r'C:\Users\MOT_USER\Documents\Python Scripts\QuantumLabPython\ExperimentMOT_special_2\Output\Pump_duration' + '\\' + 'OptDens_vs_PumpDuration')


### CLEAN
del  Probe_imgs, Probe_opt_imgs, Px_list
gc.collect()







